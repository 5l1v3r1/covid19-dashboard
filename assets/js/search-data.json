{
  
    
        "post0": {
            "title": "COVID-19 Growth Analysis",
            "content": "#collapse-hide def plot_countries(df, countries, min_cases=100, ls=&#39;-&#39;, col=&#39;cases&#39;): for country in countries: (df.loc[(df.country == country) &amp; (df.cases &gt;= min_cases)] .reset_index()[col] .plot(label=country, ls=ls) ) sns.set_palette(sns.hls_palette(8, l=.45, s=.8)) # 8 countries max fig, ax = plt.subplots(figsize=(12, 8)) countries = [&#39;Italy&#39;, &#39;US (total)&#39;, &#39;Germany&#39;, &#39;France&#39;, &#39;Spain&#39;, &#39;United Kingdom (total)&#39;, &#39;Poland&#39;, &#39;Iran&#39;] plot_countries(df_confirmed, countries) asian_countries = [&#39;Singapore&#39;, &#39;Japan&#39;, &#39;Korea, South&#39;, &#39;Hong Kong&#39;] plot_countries(df_confirmed, asian_countries, ls=&#39;--&#39;) x = np.linspace(0, plt.xlim()[1] - 1) plt.plot(x, 100 * (1.33) ** x, ls=&#39;--&#39;, color=&#39;k&#39;, label=&#39;33% daily growth&#39;) plt.yscale(&#39;log&#39;); plt.title(&#39;Data up to {}&#39;.format(df_confirmed.index.max().strftime(&#39;%B %d, %Y&#39;))) plt.xlabel(&#39;Days from first 100 confirmed cases&#39;) plt.ylabel(&#39;Confirmed cases (log scale)&#39;) ax.get_yaxis().set_major_formatter(matplotlib.ticker.ScalarFormatter()) plt.legend(bbox_to_anchor=(1.0, 1.0)) sns.despine() plt.annotate(&#39;Based on COVID Data Repository by Johns Hopkins CSSE nBy Thomas Wiecki&#39;, (0.05, 0.0), xycoords=&#39;figure fraction&#39;, fontsize=10); . . #collapse-hide sns.set_palette(sns.hls_palette(8, l=.45, s=.8)) # 8 countries max fig, ax = plt.subplots(figsize=(12, 8)) # 28000 intensiv, 80% belegt icu_germany = 28000 #* .2 df_tmp = df_confirmed.loc[lambda x: (x.country == &#39;Germany&#39;) &amp; (x.cases &gt; 100)].cases_crit df_tmp.plot(ax=ax) x = np.linspace(0, 30, 30) pd.Series(index=pd.date_range(df_tmp.index[0], periods=30), data=100*p_crit * (1.33) ** x).plot(ls=&#39;--&#39;, color=&#39;k&#39;, label=&#39;33% daily growth&#39;) plt.axhline(icu_germany, color=&#39;.3&#39;, ls=&#39;-.&#39;, label=&#39;Total ICU beds&#39;) plt.axhline(icu_germany * .2, color=&#39;.5&#39;, ls=&#39;:&#39;, label=&#39;Free ICU beds&#39;) plt.yscale(&#39;log&#39;); plt.title(&#39;When will Germany run out of ICU beds?&#39;) #plt.xlabel(&#39;Days from first 100 confirmed cases&#39;) plt.ylabel(&#39;Expected critical cases (log scale)&#39;) ax.get_yaxis().set_major_formatter(matplotlib.ticker.ScalarFormatter()) plt.legend(bbox_to_anchor=(1.0, 1.0)) sns.despine() plt.annotate(&#39;Based on COVID Data Repository by Johns Hopkins CSSE by {} nBy Thomas Wiecki&#39;.format(df_confirmed.index.max().strftime(&#39;%B %d, %Y&#39;)), (0.05, 0.0), xycoords=&#39;figure fraction&#39;, fontsize=10); . . #collapse-hide df_confirmed[&#39;pct_change&#39;] = df_confirmed.groupby(&#39;country&#39;).cases.pct_change().rolling(5).mean() fig, ax = plt.subplots(figsize=(14, 8)) df_confirmed.set_index(&#39;country&#39;, append=True).loc[(slice(None), countries), :].loc[lambda x: x.cases &gt; 100].reset_index().set_index(&#39;days_since_100&#39;).groupby(&#39;country&#39;)[&#39;pct_change&#39;].plot() df_confirmed.set_index(&#39;country&#39;, append=True).loc[(slice(None), asian_countries), :].loc[lambda x: x.cases &gt; 100].reset_index().set_index(&#39;days_since_100&#39;).groupby(&#39;country&#39;)[&#39;pct_change&#39;].plot(ls=&#39;--&#39;) plt.ylim(0, 1) plt.xlim(0, 20) plt.axhline(.33, ls=&#39;--&#39;, color=&#39;k&#39;) plt.legend() plt.title(&#39;Data up to {}&#39;.format(df_confirmed.index.max().strftime(&#39;%B %d, %Y&#39;))) plt.xlabel(&#39;Days from first 100 confirmed cases&#39;) plt.ylabel(&#39;Percent change from previous # of confirmed&#39;) ax.get_yaxis().set_major_formatter(matplotlib.ticker.ScalarFormatter()) plt.legend(bbox_to_anchor=(1.0, 1.0)) sns.despine() plt.annotate(&#39;Based on COVID Data Repository by Johns Hopkins CSSE nBy Thomas Wiecki&#39;, (0.05, 0.0), xycoords=&#39;figure fraction&#39;, fontsize=10); . . Updated daily by GitHub Actions. . This visualization was made by Thomas Wiecki1. . . Data sourced from &quot;2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE&quot; GitHub repository and recreates the (pay-walled) plot in the Financial Times. This code is provided under the BSD-3 License. Link to original notebook.&#8617; . |",
            "url": "https://covid19dashboards.com/growth-analysis/",
            "relUrl": "/growth-analysis/",
            "date": " • Mar 14, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Estimating The Mortality Rate For COVID-19",
            "content": "Observed mortality rates . #collapse-hide display(Markdown(&#39;Overall reported mortality rate: %.2f%%&#39; % (100.0 * df[&#39;deaths&#39;].sum() / df[&#39;cases&#39;].sum()))) df_highest = df.sort_values(&#39;cases&#39;, ascending=False).head(15) mortality_rate = pd.Series( data=(df_highest[&#39;deaths&#39;]/df_highest[&#39;cases&#39;]).values, index=map(lambda x: &#39;%s (%i cases)&#39; % (x, df_highest.loc[x][&#39;cases&#39;]), df_highest.index)) ax = mortality_rate.plot.bar( figsize=(14,7), title=&#39;Reported Mortality Rate by Country (countries w/ highest case counts)&#39;) ax.axhline(df[&#39;deaths&#39;].sum() / df[&#39;cases&#39;].sum(), color=&#39;k&#39;, ls=&#39;--&#39;) plt.show() . . Overall reported mortality rate: 3.74% . Model . Estimate COVID-19 mortality rate, controling for country factors . #collapse-hide n_samp = len(trace[&#39;mu_0&#39;]) mu0_summary = pm.summary(trace).loc[&#39;mu_0&#39;] print(&quot;COVID-19 Global Mortality Rate Estimation:&quot;) print(&quot;Posterior mean: %0.2f%%&quot; % (100*trace[&#39;mu_0&#39;].mean())) print(&quot;Posterior median: %0.2f%%&quot; % (100*np.median(trace[&#39;mu_0&#39;]))) lower = np.sort(trace[&#39;mu_0&#39;])[int(n_samp*0.025)] upper = np.sort(trace[&#39;mu_0&#39;])[int(n_samp*0.975)] print(&quot;95%% posterior interval: (%0.2f%%, %0.2f%%)&quot; % (100*lower, 100*upper)) print(&quot;&quot;) # Posterior plot for mu0 print(&#39;Posterior probability density for COVID-19 mortality rate, controlling for country factors:&#39;) ax = pm.plot_posterior(trace, var_names=[&#39;mu_0&#39;], figsize=(18, 8), textsize=18, credible_interval=0.95, bw=3.0, lw=3, kind=&#39;kde&#39;) . . COVID-19 Global Mortality Rate Estimation: Posterior mean: 1.15% Posterior median: 0.96% 95% posterior interval: (0.31%, 3.14%) Posterior probability density for COVID-19 mortality rate, controlling for country factors: . Magnitude and Significance of Factors . For bias in reported COVID-19 mortality rate . #collapse-hide # Posterior summary for the beta parameters: beta_summary = pm.summary(trace).head(7) beta_summary.index = [&#39;days_since_first_case&#39;, &#39;cpi&#39;, &#39;healthcare_oop&#39;, &#39;hospital_beds&#39;, &#39;hci&#39;, &#39;percent_over65&#39;, &#39;percent_rural&#39;] beta_summary.reset_index(drop=False, inplace=True) err_vals = ((beta_summary[&#39;hpd_3%&#39;] - beta_summary[&#39;mean&#39;]).values, (beta_summary[&#39;hpd_97%&#39;] - beta_summary[&#39;mean&#39;]).values) ax = beta_summary.plot(x=&#39;index&#39;, y=&#39;mean&#39;, kind=&#39;bar&#39;, figsize=(14, 7), title=&#39;Posterior Distribution of Beta Parameters&#39;, yerr=err_vals, color=&#39;lightgrey&#39;, legend=False, grid=True, capsize=5) beta_summary.plot(x=&#39;index&#39;, y=&#39;mean&#39;, color=&#39;k&#39;, marker=&#39;o&#39;, linestyle=&#39;None&#39;, ax=ax, grid=True, legend=False, xlim=plt.gca().get_xlim()) plt.savefig(&#39;../images/corvid-mortality.png&#39;) . . About This Analysis . In this project1, we attempt to estimate the true mortality rate2 for COVID-19 while controlling for country-level covariates34 such as: . age of outbreak in the country | transparency of the country&#39;s government | access to healthcare | demographics such as age of population and rural vs. urban | . Interpretation of Country-Level Parameters . days_since_first_case - positive (very statistically significant). As time since outbreak increases, expected mortality rate increases, as expected. | cpi - negative (statistically significant). As government transparency increases, expected mortality rate decreases. This may mean that less transparent governments under-report cases, hence inflating the mortality rate. | healthcare avg. out-of-pocket spending - no significant trend. | hospital beds per capita - no significant trend. | Human Capital Index - no significant trend (slightly negative = mortality rates decrease with increased mobilization of the country) | percent over 65 - positive (statistically significant). As population age increases, the mortality rate also increases, as expected. | percent rural - no significant trend. | . Full details about the model are available at: https://github.com/jwrichar/COVID19-mortality&#8617; . | As of March 10, the overall reported mortality rate is 3.5%. However, this figure does not account for systematic biases in case reporting and testing. The observed mortality of COVID-19 has varied widely from country to country (as of early March 2020). For instance, as of March 10, mortality rates have ranged from &lt; 0.1% in places like Germany (1100+ cases) to upwards of 5% in Italy (9000+ cases) and 3.9% in China (80k+ cases).&#8617; . | The point of our modelling work here is to try to understand and correct for the country-to-country differences that may cause the observed discrepancies in COVID-19 country-wide mortality rates. That way we can &quot;undo&quot; those biases and try to pin down an overall real mortality rate.&#8617; . | The affects of these parameters are subject to change as more data are collected.&#8617; . |",
            "url": "https://covid19dashboards.com/covid-19-mortality-estimation/",
            "relUrl": "/covid-19-mortality-estimation/",
            "date": " • Mar 13, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "COVID-19 Exploratory Data Analysis",
            "content": "These visualizations were made by Devakumar kp. Original notebook is here. . World-Wide Totals . Date Confirmed Deaths Recovered Active . 0 2020-03-13 00:00:00 | 145193 | 5404 | 70251 | 69538 | . Progession of Virus Over Time . Cumalitive Outcomes . . Recovery and Mortality Rate . . No. of Places To Which COVID-19 spread . . Maps . . Top 20 Countries . . Composition of Cases . . Epidemic Span . Note : In the graph, last day is shown as one day after the last time a new confirmed cases reported in the Country / Region . . China vs. Not China . . Data By Country . Top 50 Countries By Confirmed Cases . Country/Region Confirmed Deaths Recovered Active Mortality Rate . 0 China | 80945 | 3180 | 64196 | 13569 | 3.930000 | . 1 Italy | 17660 | 1266 | 1439 | 14955 | 7.170000 | . 2 Iran | 11364 | 514 | 2959 | 7891 | 4.520000 | . 3 Korea, South | 7979 | 66 | 510 | 7403 | 0.830000 | . 4 Spain | 5232 | 133 | 193 | 4906 | 2.540000 | . 5 Germany | 3675 | 7 | 46 | 3622 | 0.190000 | . 6 France | 3667 | 79 | 12 | 3576 | 2.150000 | . 7 US | 2179 | 47 | 12 | 2120 | 2.160000 | . 8 Switzerland | 1139 | 11 | 4 | 1124 | 0.970000 | . 9 Norway | 996 | 0 | 1 | 995 | 0.000000 | . 10 Sweden | 814 | 1 | 1 | 812 | 0.120000 | . 11 Denmark | 804 | 0 | 1 | 803 | 0.000000 | . 12 Netherlands | 804 | 10 | 0 | 794 | 1.240000 | . 13 United Kingdom | 801 | 8 | 19 | 774 | 1.000000 | . 14 Japan | 701 | 19 | 118 | 564 | 2.710000 | . 15 Cruise Ship | 696 | 7 | 325 | 364 | 1.010000 | . 16 Belgium | 559 | 3 | 1 | 555 | 0.540000 | . 17 Austria | 504 | 1 | 6 | 497 | 0.200000 | . 18 Qatar | 320 | 0 | 0 | 320 | 0.000000 | . 19 Australia | 200 | 3 | 23 | 174 | 1.500000 | . 20 Singapore | 200 | 0 | 97 | 103 | 0.000000 | . 21 Malaysia | 197 | 0 | 26 | 171 | 0.000000 | . 22 Canada | 193 | 1 | 8 | 184 | 0.520000 | . 23 Greece | 190 | 1 | 0 | 189 | 0.530000 | . 24 Bahrain | 189 | 0 | 44 | 145 | 0.000000 | . 25 Israel | 161 | 0 | 4 | 157 | 0.000000 | . 26 Finland | 155 | 0 | 1 | 154 | 0.000000 | . 27 Brazil | 151 | 0 | 0 | 151 | 0.000000 | . 28 Slovenia | 141 | 0 | 0 | 141 | 0.000000 | . 29 Czechia | 141 | 0 | 0 | 141 | 0.000000 | . 30 Iceland | 134 | 0 | 1 | 133 | 0.000000 | . 31 Portugal | 112 | 0 | 1 | 111 | 0.000000 | . 32 Iraq | 101 | 9 | 24 | 68 | 8.910000 | . 33 Ireland | 90 | 1 | 0 | 89 | 1.110000 | . 34 Romania | 89 | 0 | 7 | 82 | 0.000000 | . 35 Saudi Arabia | 86 | 0 | 1 | 85 | 0.000000 | . 36 United Arab Emirates | 85 | 0 | 17 | 68 | 0.000000 | . 37 India | 82 | 2 | 4 | 76 | 2.440000 | . 38 San Marino | 80 | 5 | 0 | 75 | 6.250000 | . 39 Kuwait | 80 | 0 | 5 | 75 | 0.000000 | . 40 Egypt | 80 | 2 | 27 | 51 | 2.500000 | . 41 Estonia | 79 | 0 | 0 | 79 | 0.000000 | . 42 Lebanon | 77 | 3 | 1 | 73 | 3.900000 | . 43 Thailand | 75 | 1 | 35 | 39 | 1.330000 | . 44 Indonesia | 69 | 4 | 2 | 63 | 5.800000 | . 45 Poland | 68 | 2 | 0 | 66 | 2.940000 | . 46 Philippines | 64 | 5 | 2 | 57 | 7.810000 | . 47 Taiwan* | 50 | 1 | 20 | 29 | 2.000000 | . 48 Vietnam | 47 | 0 | 16 | 31 | 0.000000 | . 49 Russia | 45 | 0 | 3 | 42 | 0.000000 | . Top 25 Countries By Deaths Reported . Country/Region Deaths . 0 China | 3180 | . 1 Italy | 1266 | . 2 Iran | 514 | . 3 Spain | 133 | . 4 France | 79 | . 5 Korea, South | 66 | . 6 US | 47 | . 7 Japan | 19 | . 8 Switzerland | 11 | . 9 Netherlands | 10 | . 10 Iraq | 9 | . 11 United Kingdom | 8 | . 12 Germany | 7 | . 13 Cruise Ship | 7 | . 14 San Marino | 5 | . 15 Australia | 3 | . 16 Belgium | 3 | . 17 Lebanon | 3 | . 18 India | 2 | . 19 Egypt | 2 | . 20 Sweden | 1 | . 21 Canada | 1 | . 22 Greece | 1 | . 23 Austria | 1 | . 24 Ireland | 1 | . Top 25 Chinese Provinces By Confirmed Cases . Province/State Confirmed Deaths Recovered . 0 Hubei | 67786 | 3062 | 51553 | . 1 Guangdong | 1356 | 8 | 1296 | . 2 Henan | 1273 | 22 | 1249 | . 3 Zhejiang | 1215 | 1 | 1197 | . 4 Hunan | 1018 | 4 | 1005 | . 5 Anhui | 990 | 6 | 984 | . 6 Jiangxi | 935 | 1 | 934 | . 7 Shandong | 760 | 7 | 739 | . 8 Jiangsu | 631 | 0 | 630 | . 9 Chongqing | 576 | 6 | 566 | . 10 Sichuan | 539 | 3 | 503 | . 11 Heilongjiang | 482 | 13 | 446 | . 12 Beijing | 436 | 8 | 342 | . 13 Shanghai | 346 | 3 | 324 | . 14 Hebei | 318 | 6 | 310 | . 15 Fujian | 296 | 1 | 295 | . 16 Guangxi | 252 | 2 | 243 | . 17 Shaanxi | 245 | 2 | 232 | . 18 Yunnan | 174 | 2 | 170 | . 19 Hainan | 168 | 6 | 160 | . 20 Guizhou | 146 | 2 | 140 | . 21 Tianjin | 136 | 3 | 132 | . 22 Hong Kong | 134 | 4 | 77 | . 23 Shanxi | 133 | 0 | 133 | . 24 Gansu | 127 | 2 | 88 | . 25 Liaoning | 125 | 1 | 112 | . 26 Jilin | 93 | 1 | 91 | . 27 Xinjiang | 76 | 3 | 73 | . 28 Inner Mongolia | 75 | 1 | 71 | . 29 Ningxia | 75 | 0 | 72 | . 30 Qinghai | 18 | 0 | 18 | . 31 Macau | 10 | 0 | 10 | . 32 Tibet | 1 | 0 | 1 | . Related Work . https://www.kaggle.com/imdevskp/mers-outbreak-analysis | https://www.kaggle.com/imdevskp/sars-2003-outbreak-analysis | https://www.kaggle.com/imdevskp/western-africa-ebola-outbreak-analysis |",
            "url": "https://covid19dashboards.com/corona-eda/",
            "relUrl": "/corona-eda/",
            "date": " • Mar 13, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "COVID-19 Comparitive Analysis",
            "content": "These visualizations were made by Devakumar kp, from this kaggle kernel. . Reported Countries . . Deaths . . Proportion . . Comparison . . In the first N days . . Related Work . https://www.kaggle.com/imdevskp/covid-19-analysis-viz-prediction-comparisons | https://www.kaggle.com/imdevskp/western-africa-ebola-outbreak-analysis | https://www.kaggle.com/imdevskp/sars-2003-outbreak-analysis |",
            "url": "https://covid19dashboards.com/comparitive-analysis/",
            "relUrl": "/comparitive-analysis/",
            "date": " • Mar 13, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "COVID-19 Growth By State (US)",
            "content": "#collapse-hide for case_threshold in [30, 100]: df = US_cities[US_cities[&#39;Total&#39;] &gt; case_threshold].sort_values(by=&#39;Total&#39;) df = df.drop([&#39;Province/State&#39;, &#39;Country/Region&#39;, &#39;Lat&#39;, &#39;Long&#39;, &#39;Total&#39;], axis=1) cols = list(df) df = df[cols[-2:] + cols[:-2]] states = df.melt(id_vars=[&#39;Area&#39;,&#39;State&#39;], var_name=&#39;date&#39;, value_name=&#39;cases_confirmed&#39;) pivoted = states.groupby([&#39;State&#39;, &#39;date&#39;], as_index=False).sum().pivot(&#39;date&#39;, &#39;State&#39;).cumsum() cleaned = pivoted.reset_index().cases_confirmed cols = [] for col in cleaned: cols.append(cleaned[col][cleaned[col] &gt; case_threshold].dropna().reset_index()[col]) fig = plt.figure(figsize=(16, 8)) ax = plt.axes() pd.concat(cols, axis=1, names=list(cleaned)).plot(ax=ax, marker=&#39;o&#39;, logy=True) plt.title(&#39;COVID19 Growth in US states&#39;) plt.ylabel(&#39;Cumulative confirmed cases (log scale)&#39;) plt.xlabel(f&#39;Number of days since {case_threshold}th case&#39;) plt.annotate(&#39;Based on COVID Data Repository by Johns Hopkins CSSE nBy Avy Faingezicht, @avyfain&#39;, (0.07, 0.02), xycoords=&#39;figure fraction&#39;, fontsize=10); plt.legend(loc=&quot;lower right&quot;) if case_threshold == 100: x = np.linspace(0, plt.xlim()[1] - 1) plt.plot(x, 100 * (1.33) ** x, ls=&#39;--&#39;, color=&#39;k&#39;, label=&#39;33% daily growth&#39;) plt.annotate(&#39;33% Daily Growth&#39;, (0.85, 0.9), xycoords=&#39;figure fraction&#39;, fontsize=10); . . Updated hourly by GitHub Actions. . This visualization was made by Avy Faingezicht1. . . Data sourced from &quot;2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE&quot; GitHub repository. Link to original notebook.&#8617; . |",
            "url": "https://covid19dashboards.com/growth-us-states/",
            "relUrl": "/growth-us-states/",
            "date": " • Mar 12, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About",
          "content": "About This Project . This site was built by Hamel Husain. View this project on GitHub. . This website is powered by fastpages, a blogging platform that natively supports Jupyter notebooks in addition to other formats. . Contributing Guide . Do you have a visualization that you would like to add? Or would you like to improve or fix an existing visualization? . Please submit a pull request1 or get in touch!2 . . Familiarity with fastpages is helpful. All you need to do is include the appropriate front matter in your notebook. See this guide. You can submit a Pull Request at https://github.com/machine-learning-apps/covid19-dashboard. &#8617; . | Feel free to get in touch on Twitter: @HamelHusain &#8617; . |",
          "url": "https://covid19dashboards.com/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}